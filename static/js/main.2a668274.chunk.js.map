{"version":3,"sources":["components/SuperCheckbox/SuperCheckbox.module.css","components/SuperInput/SuperInput.module.css","pages/404/Error404.module.css","components/SuperButton/SuperButton.module.css","components/Header/Header.module.css","components/SuperEditableSpan/EditableSpan.module.css","routes/Routes.tsx","components/SuperInput/SuperInput.tsx","components/SuperEditableSpan/SuperEditableSpan.tsx","redux/Selectors.ts","assets/img/user-logo.svg","utils/api.ts","redux/auth/actions.ts","redux/main/appActions.ts","components/Loader/Loader.tsx","pages/Profile/ProfilePage.tsx","redux/auth/thunks.ts","pages/404/404.tsx","components/SuperButton/SuperButton.tsx","components/SuperCheckbox/SuperCheckbox.tsx","components/SuperSelect/SuperSelect.tsx","components/SuperRadio/SuperRadio.tsx","pages/Test/TestPage.tsx","assets/styled-components.ts","pages/Auth/Login/Login.tsx","pages/Auth/Register/Register.tsx","pages/Auth/LostPassword/LostPassword.tsx","pages/Auth/NewPassword/NewPassword.tsx","components/Header/Header.tsx","App.tsx","reportWebVitals.ts","redux/auth/reducers.ts","redux/profile/reducers.ts","redux/main/appReducers.ts","redux/store.ts","index.tsx"],"names":["module","exports","PATH","SuperInput","type","onChange","onChangeText","onKeyPress","onEnter","error","className","spanClassName","restProps","finalSpanClassName","s","finalInputClassName","superInput","errorInput","e","currentTarget","value","key","SuperEditableSpan","autoFocus","onBlur","spanProps","useState","editMode","setEditMode","children","onDoubleClick","restSpanProps","isEditable","selectAuth","state","auth","selectApp","app","instance","axios","create","baseURL","withCredentials","AuthAPI","post","login","password","rememberMe","email","delete","message","then","r","data","resetPasswordToken","name","avatar","put","setUser","userData","registerAC","setLoading","isLoading","setError","setSuccess","success","Loader","position","ProfilePage","useSelector","isLoggedIn","setAvatar","username","setUsername","dispatch","useDispatch","update","a","response","updatedUser","thunkUpdateProfile","src","userLogo","alt","width","to","LOGIN","Error404","wrapper","title","subtitle","SuperButton","red","finalClassName","default","SuperCheckbox","onChangeChecked","checkbox","container","checked","checkmark","SuperSelect","options","onChangeOption","mappedOptions","map","opt","index","SuperRadio","onChangeCallback","o","i","TestPage","arr","setValue","setChecked","radioValue","onClick","alert","undefined","FlexWrapper","styled","div","Login","setLogin","setPassword","setRememberMe","onChangeHandler","event","PROFILE","Boolean","style","color","thunkLogin","RESET_PASS","activeClassName","ErrorWrapper","Register","setEmail","emailError","setEmailError","passwordError","setPasswordError","isRegistered","setIsRegistered","validateEmail","test","required","length","preventDefault","registerTC","disabled","LostPassword","validation","setValidation","regExp","useEffect","htmlFor","id","placeholder","match","thunkForgotPassword","NewPassword","token","useParams","pass","setPass","Routes","exact","path","render","TEST","component","REGISTER","NEW_PASS","Header","header","logoutBtn","App","loading","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","appInitialState","rootReducer","combineReducers","action","profile","store","createStore","applyMiddleware","thunk","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2a668274.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkbox\":\"SuperCheckbox_checkbox__11lfD\",\"spanClassName\":\"SuperCheckbox_spanClassName__7_Yre\",\"checkmark\":\"SuperCheckbox_checkmark__ewbX4\",\"container\":\"SuperCheckbox_container__1YCGq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"superInput\":\"SuperInput_superInput__1GUOs\",\"errorInput\":\"SuperInput_errorInput__2SR5j\",\"error\":\"SuperInput_error__2FQdm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"Error404_wrapper__2WpHM\",\"title\":\"Error404_title__1_7jg\",\"subtitle\":\"Error404_subtitle__19TTw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"SuperButton_default__FlHuv\",\"red\":\"SuperButton_red__jtp3O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1FryV\",\"logoutBtn\":\"Header_logoutBtn__3vxl8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"isEditable\":\"EditableSpan_isEditable__2--ik\"};","import React from \"react\";\nimport {Switch, Route, Redirect} from \"react-router-dom\";\nimport {ProfilePage} from \"../pages/Profile/ProfilePage\";\nimport {Error404} from \"../pages/404/404\";\nimport {TestPage} from \"../pages/Test/TestPage\";\nimport {Login} from \"../pages/Auth/Login/Login\";\nimport {Register} from \"../pages/Auth/Register/Register\";\nimport {LostPassword} from \"../pages/Auth/LostPassword/LostPassword\";\nimport {NewPassword} from \"../pages/Auth/NewPassword/NewPassword\";\n\nexport enum PATH {\n    TEST = '/test',\n    PROFILE = '/profile',\n    LOGIN = '/login',\n    REGISTER = '/register',\n    RESET_PASS = '/lostpassword',\n    NEW_PASS = '/newpassword/:token'\n}\n\nexport const Routes = () => {\n    return <Switch>\n        <Route exact path={\"/\"} render={() => <Redirect to={PATH.TEST}/>}/>\n        <Route path={PATH.TEST} component={TestPage}/>\n        <Route path={PATH.LOGIN} component={Login}/>\n        <Route path={PATH.REGISTER} component={Register}/>\n        <Route path={PATH.PROFILE} component={ProfilePage}/>\n        <Route path={PATH.RESET_PASS} component={LostPassword}/>\n        <Route path={PATH.NEW_PASS} component={NewPassword}/>\n        <Route component={Error404}/>\n    </Switch>\n}","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from \"react\";\nimport s from \"./SuperInput.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperInputTextPropsType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void,\n    onEnter?: () => void,\n    error?: string,\n    spanClassName?: string,\n};\n\nconst SuperInput: React.FC<SuperInputTextPropsType> = (\n    {\n        type = \"text\",\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange // если есть пропс onChange\n        && onChange(e); // то передать ему е (поскольку onChange не обязателен)\n\n        onChangeText && onChangeText(e.currentTarget.value);\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\" // если нажата кнопка Enter\n        && onEnter // и есть пропс onEnter\n        && onEnter(); // то вызвать его\n    }\n\n    const finalSpanClassName = `${s.error} ${spanClassName ? spanClassName : \"\"}`;\n    const finalInputClassName = `${s.superInput} ${className ? className : \"\"} ${error ? s.errorInput : \"\"}`; // need to fix with (?:) and s.superInput\n\n    return (\n        <>\n            <input\n                type={type}\n                onChange={onChangeCallback}\n                onKeyPress={onKeyPressCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n            />\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </>\n    );\n}\n\nexport default SuperInput;\n","import React, {DetailedHTMLProps, InputHTMLAttributes, HTMLAttributes, useState} from \"react\";\nimport SuperInput from \"../SuperInput/SuperInput\";\nimport s from \"./EditableSpan.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n// тип пропсов обычного спана\ntype DefaultSpanPropsType = DetailedHTMLProps<HTMLAttributes<HTMLSpanElement>, HTMLSpanElement>;\n\n// здесь мы говорим что у нашего инпута будут такие же пропсы как у обычного инпута\n// (чтоб не писать value: string, onChange: ...; они уже все описаны в DefaultInputPropsType)\ntype SuperEditableSpanType = DefaultInputPropsType & { // и + ещё пропсы которых нет в стандартном инпуте\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n\n    spanProps?: DefaultSpanPropsType // пропсы для спана\n};\n\nconst SuperEditableSpan: React.FC<SuperEditableSpanType> = (\n    {\n        autoFocus, // игнорировать изменение этого пропса\n        onBlur,\n        onEnter,\n        spanProps,\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const [editMode, setEditMode] = useState<boolean>(false);\n    const {children, onDoubleClick, className, ...restSpanProps} = spanProps || {};\n\n    const onEnterCallback = () => {\n        setEditMode(false); // выключить editMode при нажатии Enter\n        onEnter && onEnter();\n    };\n    const onBlurCallback = (e: React.FocusEvent<HTMLInputElement>) => {\n        setEditMode(false); // выключить editMode при нажатии за пределами инпута\n        onBlur && onBlur(e);\n    };\n    const onDoubleClickCallBack = (e: React.MouseEvent<HTMLSpanElement, MouseEvent>) => {\n        setEditMode(true); // включить editMode при двойном клике\n        onDoubleClick && onDoubleClick(e);\n    };\n\n    const spanClassName = `${!editMode ? s.isEditable : ''} ${className}`;\n\n    return (\n        <>\n            {editMode\n                ? (\n                    <SuperInput\n                        autoFocus // пропсу с булевым значением не обязательно указывать true\n                        onBlur={onBlurCallback}\n                        onEnter={onEnterCallback}\n                        {...restProps} // отдаём инпуту остальные пропсы если они есть (value например там внутри)\n                    />\n                ) : (\n                    <span\n                        onDoubleClick={onDoubleClickCallBack}\n                        className={spanClassName}\n                        {...restSpanProps}\n                    >\n                        {/*если нет захардкодженного текста для спана, то значение инпута*/}\n                        {children || restProps.value}\n                    </span>\n                )\n            }\n        </>\n    );\n}\n\nexport default SuperEditableSpan;\n","import {IGlobalState} from \"./store\";\n\ninterface IRootState extends IGlobalState{}\n\nexport const selectProfile = (state: IRootState) => state.profile\nexport const selectAuth = (state: IRootState) => state.auth\nexport const selectApp = (state: IRootState) => state.app;\n","export default __webpack_public_path__ + \"static/media/user-logo.e327041b.svg\";","import axios from 'axios'\n\ntype LoginResponseType = {\n    _id: string;\n    email: string;\n    name: string;\n    avatar?: string;\n    publicCardPacksCount: number; // количество колод\n\n    created: Date;\n    updated: Date;\n    isAdmin: boolean;\n    verified: boolean; // подтвердил ли почту\n    rememberMe: boolean;\n\n    error?: string;\n}\nconst btnStyle = `border-radius: 3px;\n    background: #3aa54c;\n    color: #fff;\n    display: block;\n    font-weight: 700;\n    font-size: 16px;\n    line-height: 1.25em;\n    margin: 24px 0;\n    padding: 10px 18px;\n    text-decoration: none;\n    width: 180px;\n    text-align: center;`\n\nconst instance = axios.create({baseURL: \"https://neko-back.herokuapp.com/2.0\", withCredentials: true})\n\nexport const AuthAPI = {\n    authMe: () =>\n        instance.post<LoginResponseType>(\"auth/me\", {}),\n\n    login: (login: string, password: string, rememberMe: boolean) =>\n        instance.post<LoginResponseType>(\"auth/login\", {email: login, password, rememberMe}),\n\n    logOut: () => instance.delete('auth/me'),\n\n    forgot: (email: string) =>\n        instance.post(`auth/forgot`, {\n            email,\n            message: `<div style=\"font-size: 16px\">Click the link below and you'll be redirected to a site where you can set a new password</div>\n                <div><a style=\"${btnStyle}\" href='https://m-marc.github.io/cards-nya/#/newpassword/$token$'>Set new password</a></div>`\n        }).then(r => r.data),\n\n    newpass: (password: string, resetPasswordToken: string) =>\n        instance.post(`auth/set-new-password`, {password, resetPasswordToken}).then(r => r.data),\n\n    register: (email: string, password: string) => instance.post(`auth/register`, {email, password}),\n\n    updateProfile: (name: string, avatar: string) => instance.put(`auth/me`, {name, avatar}).then(r => r.data)\n}\n","import {UserType} from \"./reducers\";\n\nexport const setUser = (userData: UserType) => ({type: 'Auth/login', userData} as const)\n\nexport const registerAC = (email: string, password: string) => ( {type: 'register', email, password} as const)\n\nexport const logOutAC = () => ( {type: 'Auth/logout'} as const)\n","export const setLoading = (isLoading: boolean) => ({type: 'app/SET_LOADING', isLoading} as const)\nexport const setError = (error: string) => ({type: 'app/SET_ERROR', error} as const)\nexport const setSuccess = (success: boolean) => ({type: 'app/SET_SUCCESS', success} as const)\n\nexport type AppActionsType = ReturnType<typeof setLoading> | ReturnType<typeof setError>\n    | ReturnType<typeof setSuccess>","import React from 'react';\n\ntype loaderPropsType = {\n    position?: \"center\" | \"initial\";\n}\n\nexport const Loader = ({position = \"initial\"}:loaderPropsType) => {\n    return (\n        <div className={`spinnerWrapper ${(position === \"center\") ? \"spinnerWrapper--center\" : \"\"}`}>\n            <div className={\"spinnerInner\"}>\n                <div className={\"spinner\"}>&nbsp;</div>\n            </div>\n        </div>\n    );\n};","import React, {useState} from 'react';\nimport SuperEditableSpan from \"../../components/SuperEditableSpan/SuperEditableSpan\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectApp, selectAuth} from \"../../redux/Selectors\";\nimport {Redirect} from \"react-router-dom\"\nimport {PATH} from \"../../routes/Routes\";\nimport userLogo from \"../../assets/img/user-logo.svg\";\nimport {thunkUpdateProfile} from \"../../redux/auth/thunks\";\nimport {Loader} from \"../../components/Loader/Loader\";\n\nexport const ProfilePage = () => {\n    const {isLoggedIn, userData} = useSelector(selectAuth)\n    const {isLoading} = useSelector(selectApp)\n    const [avatar, setAvatar] = useState(userData.avatar || \"\")\n    const [username, setUsername] = useState(userData.name || \"\")\n    const dispatch = useDispatch()\n\n    const update = () => dispatch(thunkUpdateProfile(username, avatar))\n\n    if (!isLoggedIn) return <Redirect to={PATH.LOGIN} />\n\n    return <>\n        <h1>Profile page</h1>\n        <div>\n            <img src={userData.avatar ? userData.avatar : userLogo} alt=\"user-avatar\" width=\"100\"/>\n            <div>\n                <SuperEditableSpan\n                    value={avatar}\n                    onChangeText={setAvatar}\n                    onBlur={update}\n                    spanProps={{children: \"Change avatar\"}}/>\n            </div>\n            <div>\n                username:\n                <SuperEditableSpan\n                    value={username}\n                    onChangeText={setUsername}\n                    onBlur={update}\n                    onEnter={update}\n                    spanProps={{children: userData.name ? userData.name: \"Change username\"}}/>\n            </div>\n            {isLoading ? <Loader /> : <></>}\n        </div>\n    </>\n}","import {Dispatch} from \"redux\";\nimport {AuthAPI} from \"../../utils/api\";\nimport {setUser, registerAC, logOutAC} from \"./actions\";\nimport {setError, setLoading, setSuccess} from \"../main/appActions\";\nimport {ThunkAction} from \"redux-thunk\";\nimport {IGlobalState} from \"../store\";\nimport {AuthActionsType} from \"./reducers\";\n\nexport const thunkAuthMe = () : ThunkAction<Promise<void>, IGlobalState, unknown, AuthActionsType> =>\n    async (dispatch: Dispatch) => {\n        try {\n            const response = await AuthAPI.authMe()\n            dispatch(setUser(response.data))\n        } catch (e) {\n            const error = e.response\n                ? e.response.data.error\n                : (e.message + ', more details in the console');\n            console.log(error)\n        }\n    }\n\nexport const thunkLogin = (login: string, password: string, rememberMe: boolean) =>\n    async (dispatch: Dispatch) => {\n        dispatch(setLoading(true))\n        try {\n            const response = await AuthAPI.login(login, password, rememberMe)\n            dispatch(setUser(response.data))\n            dispatch(setSuccess(true))\n        } catch (e) {\n            const error = e.response\n                ? e.response.data.error\n                : (e.message + ', more details in the console');\n            dispatch(setError(error))\n        }\n    }\n\nexport const thunkLogOut = () =>\n    async (dispatch: Dispatch) => {\n        try {\n            await AuthAPI.logOut()\n            dispatch(logOutAC())\n            dispatch(setSuccess(true))\n        } catch (e) {\n            const error = e.response\n                ? e.response.data.error\n                : (e.message + ', more details in the console');\n            dispatch(setError(error))\n        }\n    }\n\nexport const registerTC = (email: string, password: string) => async (dispatch: Dispatch) => {\n    dispatch(setLoading(true))\n    try {\n        const response = await AuthAPI.register(email, password)\n        dispatch(registerAC(response.data.email, response.data.password))\n        dispatch(setSuccess(true))\n    } catch (e) {\n        const error = e.response\n            ? e.response.data.error\n            : (e.message + ', more details in the console');\n        dispatch(setError(error))\n    }\n\n\n}\n\nexport const thunkForgotPassword = (email: string) =>\n    async (dispatch: Dispatch) => {\n        dispatch(setLoading(true))\n        try {\n            await AuthAPI.forgot(email)\n            dispatch(setSuccess(true))\n        } catch (e) {\n            const error = e.response ? e.response.data.error : (e.message + \", more details in the console\");\n            dispatch(setError(error))\n        }\n    }\n\nexport const thunkSetNewPassword = (password: string, resetPasswordToken: string) =>\n    async (dispatch: Dispatch) => {\n        dispatch(setLoading(true))\n        try {\n            await AuthAPI.newpass(password, resetPasswordToken)\n            dispatch(setSuccess(true))\n        } catch (e) {\n            const error = e.response ? e.response.data.error : (e.message + \", more details in the console\");\n            dispatch(setError(error))\n        }\n    }\n\nexport const thunkUpdateProfile = (name: string, avatar: string) =>\n    async (dispatch: Dispatch) => {\n        dispatch(setLoading(true))\n        try {\n            const response = await AuthAPI.updateProfile(name, avatar)\n            dispatch(setUser(response.updatedUser))\n            dispatch(setSuccess(true))\n        } catch (e) {\n            const error = e.response ? e.response.data.error : (e.message + \", more details in the console\");\n            dispatch(setError(error))\n        }\n    }","import React from 'react';\nimport s from \"./Error404.module.css\"\n\nexport const Error404 = () => {\n    return <div className={s.wrapper}>\n        <h1 className={s.title}>404</h1>\n        <h3 className={s.subtitle}>Page not found!</h3>\n        <p>This may not mean anything.<br/>I'm probably working on something that has blown up.</p>\n        <p>Anyway, Hello World!</p>\n    </div>\n}","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from \"react\";\nimport s from \"./SuperButton.module.css\";\n\n// тип пропсов обычной кнопки, children в котором храниться название кнопки там уже описан\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean,\n    error?: string,\n}\n\nconst SuperButton: React.FC<SuperButtonPropsType> = (\n    {\n        red, className,\n        ...restProps// все остальные пропсы попадут в объект restProps, там же будет children\n    }\n) => {\n    const finalClassName = `${red ? s.red : s.default} ${className}`;\n\n    return (\n        <button\n            className={finalClassName}\n            {...restProps} // отдаём кнопке остальные пропсы если они есть (children там внутри)\n        />\n    );\n}\n\nexport default SuperButton;\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from \"react\";\nimport s from \"./SuperCheckbox.module.css\";\n\n// тип пропсов обычного инпута\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperCheckboxPropsType = DefaultInputPropsType & {\n    onChangeChecked?: (checked: boolean) => void,\n    spanClassName?: string,\n};\n\nconst SuperCheckbox: React.FC<SuperCheckboxPropsType> = (\n    {\n        type, // достаём и игнорируем чтоб нельзя было задать другой тип инпута\n        onChange, onChangeChecked,\n        className, spanClassName,\n        children, // в эту переменную попадёт текст, типизировать не нужно так как он затипизирован в React.FC\n\n        ...restProps// все остальные пропсы попадут в объект restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChangeChecked && onChangeChecked(e.currentTarget.checked)\n        onChange && onChange(e)\n    }\n\n    const finalInputClassName = `${s.checkbox} ${className ? className : \"\"}`;\n\n    return (\n        <label className={s.container}>\n            <input\n                type={\"checkbox\"}\n                onChange={onChangeCallback}\n                className={finalInputClassName}\n\n                {...restProps} // отдаём инпуту остальные пропсы если они есть (checked например там внутри)\n            />\n            <span className={s.checkmark}>&nbsp;</span>\n            {children && <span className={s.spanClassName}>{children}</span>}\n        </label> // благодаря label нажатие на спан передастся в инпут\n    );\n}\n\nexport default SuperCheckbox;\n","import React, {SelectHTMLAttributes, DetailedHTMLProps, ChangeEvent} from \"react\";\n\ntype DefaultSelectPropsType = DetailedHTMLProps<SelectHTMLAttributes<HTMLSelectElement>, HTMLSelectElement>\n\ntype SuperSelectPropsType = DefaultSelectPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperSelect: React.FC<SuperSelectPropsType> = (\n    {\n        options,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const mappedOptions: any[] = options\n        ? options.map( (opt, index) =>\n            <option key={\"o_\" + index}>{opt}</option> )\n        : [] // map options with key\n\n    const onChangeCallback = (e: ChangeEvent<HTMLSelectElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n    return (\n        <select onChange={onChangeCallback} {...restProps}>\n            {mappedOptions}\n        </select>\n    );\n}\n\nexport default SuperSelect;\n","import React, {ChangeEvent, InputHTMLAttributes, DetailedHTMLProps} from \"react\";\n\ntype DefaultRadioPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\ntype SuperRadioPropsType = DefaultRadioPropsType & {\n    options?: any[]\n    onChangeOption?: (option: any) => void\n}\n\nconst SuperRadio: React.FC<SuperRadioPropsType> = (\n    {\n        type, name,\n        options, value,\n        onChange, onChangeOption,\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange && onChange(e)\n        onChangeOption && onChangeOption(e.currentTarget.value)\n    }\n\n\n    const mappedOptions: any[] = options ? options.map((o, i) => (\n        <label key={name + \"-\" + i}>\n            <input\n                type={\"radio\"}\n                name={name}\n                value={o}\n                onChange={onChangeCallback}\n                checked={value === o}\n            />\n            {o}\n        </label>\n    )) : [];\n\n    return (\n        <>\n            {mappedOptions}\n        </>\n    );\n}\n\nexport default SuperRadio;\n","import React, {useState} from 'react';\nimport SuperButton from \"../../components/SuperButton/SuperButton\";\nimport SuperCheckbox from \"../../components/SuperCheckbox/SuperCheckbox\";\nimport SuperSelect from \"../../components/SuperSelect/SuperSelect\";\nimport SuperRadio from \"../../components/SuperRadio/SuperRadio\";\nimport SuperEditableSpan from \"../../components/SuperEditableSpan/SuperEditableSpan\";\n\nexport const TestPage = () => {\n    const arr = [\"x\", \"y\", \"z\"];\n    const [value, setValue] = useState<string>(\"\");\n    const [checked, setChecked] = useState<boolean>(false);\n    const [radioValue, onChangeOption] = useState(arr[1]);\n    const alertHandle = () =>\n        alert(`Input value is: ${value}\\nCheckbox checked: ${checked}\\nSelected radio/option: ${radioValue}`)\n    return <>\n        <h1>Here is the list of Super components:</h1>\n        <div>\n            <SuperButton onClick={alertHandle}>Check status</SuperButton>\n        </div>\n        <div>\n            <SuperCheckbox\n                checked={checked}\n                onChangeChecked={setChecked}\n            >\n                Label for checkbox\n            </SuperCheckbox>\n        </div>\n        <div>\n            <SuperSelect\n                options={arr}\n                value={radioValue}\n                onChangeOption={onChangeOption}\n            />\n        </div>\n        <div>\n            <SuperRadio\n                name={\"radio\"}\n                options={arr}\n                value={radioValue}\n                onChangeOption={onChangeOption}\n            />\n        </div>\n        <div>\n            <SuperEditableSpan\n                value={value}\n                onChangeText={setValue}\n                spanProps={{children: value ? undefined : \"Enter text...\"}}/>\n        </div>\n    </>\n}","import styled from \"styled-components\";\n\nexport const FlexWrapper = styled.div`\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n`","import React, {useState} from 'react'\nimport {NavLink, Redirect} from \"react-router-dom\";\nimport {PATH} from \"../../../routes/Routes\";\nimport SuperInputText from \"../../../components/SuperInput/SuperInput\";\nimport SuperButton from \"../../../components/SuperButton/SuperButton\";\nimport SuperCheckbox from \"../../../components/SuperCheckbox/SuperCheckbox\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {thunkLogin} from \"../../../redux/auth/thunks\";\nimport {IGlobalState} from \"../../../redux/store\";\nimport {setError} from \"../../../redux/main/appActions\";\nimport {selectApp} from \"../../../redux/Selectors\";\nimport {FlexWrapper} from \"../../../assets/styled-components\";\nimport {Loader} from \"../../../components/Loader/Loader\";\n\nexport const Login = () => {\n    const [login, setLogin] = useState(\"\")\n    const [password, setPassword] = useState(\"\")\n    const [rememberMe, setRememberMe] = useState(true)\n    const {error, isLoading} = useSelector(selectApp)\n    const isLoggedIn = useSelector<IGlobalState, boolean>(state => state.auth.isLoggedIn)\n    const dispatch = useDispatch()\n\n    const onChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n        if(error) dispatch(setError(''))\n        if(event.currentTarget.type === \"password\") {\n            setPassword(event.currentTarget.value)\n        }\n        else {\n            setLogin(event.currentTarget.value)\n        }\n    };\n    const onClick = () => dispatch(thunkLogin(login, password, rememberMe))\n    if(isLoggedIn) return <Redirect to={PATH.PROFILE}/>\n\n    return (\n        <>\n            <h1>Login</h1>\n            <FlexWrapper>\n                <SuperInputText value={login} onChange={onChangeHandler}/>\n                <SuperInputText type={\"password\"} value={password} onChange={onChangeHandler}/>\n                <SuperCheckbox checked={rememberMe} onChangeChecked={setRememberMe}>\n                    Remember me\n                </SuperCheckbox>\n                <div>{Boolean(error) && <span style={{color: \"red\"}}>{error}</span>}</div>\n                {isLoading ? <Loader /> : <></>}\n                <SuperButton onClick={onClick}>Submit</SuperButton>\n            </FlexWrapper>\n            <NavLink to={PATH.RESET_PASS} activeClassName={\"active\"}>Lost password</NavLink>\n        </>\n    )\n}\n","import React, {useState} from 'react'\nimport SuperInput from \"../../../components/SuperInput/SuperInput\";\nimport SuperButton from \"../../../components/SuperButton/SuperButton\";\nimport {registerTC} from \"../../../redux/auth/thunks\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Redirect} from 'react-router-dom';\nimport {PATH} from \"../../../routes/Routes\";\nimport styled from \"styled-components\"\nimport {selectApp, selectAuth} from \"../../../redux/Selectors\";\nimport {FlexWrapper} from \"../../../assets/styled-components\";\nimport {Loader} from \"../../../components/Loader/Loader\";\n\nconst ErrorWrapper = styled.div`\n  color: red;\n`\n\nexport const Register = () => {\n    const {isLoggedIn} = useSelector(selectAuth)\n    const {isLoading} = useSelector(selectApp)\n    const dispatch = useDispatch()\n\n    const [email, setEmail] = useState('')\n    const [emailError, setEmailError] = useState('')\n    const [password, setPassword] = useState('')\n    const [passwordError, setPasswordError] = useState('')\n    const [isRegistered, setIsRegistered] = useState(false)\n\n\n    const onEmailChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setEmail(event.currentTarget.value)\n    };\n    const onPasswordChangeHandler = (event: React.ChangeEvent<HTMLInputElement>) => {\n        setPassword(event.currentTarget.value)\n    };\n\n    const validateEmail = (email: string) => {\n        const re = /^[A-Z0-9._%+-]+@([A-Z0-9-]+\\.)+[A-Z]{2,4}$/i;\n        return re.test(email);\n    }\n\n    const onBlurValidationEmail = (event: React.FocusEvent<HTMLInputElement>) => {\n        if (validateEmail(email)) {\n            setEmailError('')\n        } else {\n            setEmailError('Incorrect email')\n        }\n    }\n    const onBlurValidationPassword = (event: React.FocusEvent<HTMLInputElement>) => {\n        if (password.length > 7) {\n            setPasswordError('')\n        } else {\n            setPasswordError('Password should contain more than 7 symbols')\n        }\n    }\n\n    const register = (e: React.MouseEvent<HTMLButtonElement>) => {\n        e.preventDefault()\n        if (validateEmail(email)) {\n            dispatch(registerTC(email, password));\n            setIsRegistered(true)\n        } else {\n            setEmailError('Incorrect email')\n        }\n    };\n\n    if (isRegistered) return <Redirect to={PATH.LOGIN}/>\n    if (isLoggedIn) return <Redirect to={PATH.PROFILE}/>\n\n    return (\n        <div>\n            <h1>Registration</h1>\n            <FlexWrapper>\n                <SuperInput required value={email}\n                            onChange={onEmailChangeHandler}\n                            onBlur={onBlurValidationEmail}\n                />\n                <ErrorWrapper>{emailError}</ErrorWrapper>\n                <SuperInput required type='password'\n                            value={password}\n                            onChange={onPasswordChangeHandler}\n                            onBlur={onBlurValidationPassword}/>\n                <ErrorWrapper>{passwordError}</ErrorWrapper>\n                {isLoading ? <Loader /> : <></>}\n                <SuperButton type={\"submit\"} onClick={register}\n                             disabled={!!(emailError || passwordError)}\n                >Submit</SuperButton>\n            </FlexWrapper>\n        </div>\n\n    )\n}\n","import React, {useEffect, useState} from 'react'\nimport SuperButton from \"../../../components/SuperButton/SuperButton\";\nimport SuperInput from \"../../../components/SuperInput/SuperInput\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {thunkForgotPassword} from \"../../../redux/auth/thunks\";\nimport {selectApp} from \"../../../redux/Selectors\";\nimport {Loader} from \"../../../components/Loader/Loader\";\nimport {setError} from \"../../../redux/main/appActions\";\nimport {FlexWrapper} from \"../../../assets/styled-components\";\n\nexport const LostPassword = () => {\n    const [email, setEmail] = useState<string>(\"\")\n    const [validation, setValidation] = useState<string>(\"\")\n    const {error, isLoading, success} = useSelector(selectApp)\n    const dispatch = useDispatch()\n    const regExp = /^[A-Z0-9._%+-]+@([A-Z0-9-]+\\.)+[A-Z]{2,4}$/i\n\n    const resetPasswordHandler = (e: React.MouseEvent<HTMLButtonElement>) => {\n        e.preventDefault()\n        if (!email.match(regExp)) {\n            setValidation('Email should be valid!')\n        } else {\n            setValidation('')\n            dispatch(thunkForgotPassword(email))\n        }\n    }\n\n    useEffect(() => {\n        dispatch(setError(\"\"))\n        return () => {dispatch(setError(\"\"))}\n    }, [dispatch])\n\n    return <>\n        <h1>Reset password</h1>\n        {success\n            ? <div>We sent a recovery link to your email address: <strong>{email}</strong></div>\n            : <FlexWrapper>\n                <div><label htmlFor=\"email-reset\">Enter your email:</label></div>\n                <div><SuperInput id={\"email-reset\"} type=\"email\" value={email}\n                                 placeholder={\"example@mail.com\"}\n                                 onChangeText={setEmail} /></div>\n                {isLoading ? <Loader /> : <></>}\n                <div style={{color: \"red\"}}>{validation}</div>\n                <div>{Boolean(error) && <span style={{color: \"red\"}}>{error}</span>}</div>\n                <SuperButton onClick={resetPasswordHandler} disabled={isLoading}>Reset password</SuperButton>\n            </FlexWrapper>\n        }\n    </>\n}","import React, {useState} from 'react'\nimport {useParams, Redirect} from \"react-router-dom\";\nimport SuperButton from \"../../../components/SuperButton/SuperButton\";\nimport SuperInput from \"../../../components/SuperInput/SuperInput\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {thunkSetNewPassword} from \"../../../redux/auth/thunks\";\nimport {selectApp} from \"../../../redux/Selectors\";\nimport {Loader} from \"../../../components/Loader/Loader\";\nimport {PATH} from \"../../../routes/Routes\";\n\nexport const NewPassword = () => {\n    const {token} = useParams<{token: string}>()\n    const [pass, setPass] = useState(\"\")\n    const {error, isLoading, success} = useSelector(selectApp)\n    const dispatch = useDispatch()\n    const onClickHandler = () => dispatch(thunkSetNewPassword(pass, token))\n\n    if (success) return <Redirect to={PATH.LOGIN}/>\n\n    return <>\n        <h1>Set new password</h1>\n        <SuperInput type=\"password\" value={pass} onChangeText={setPass}/>\n        <SuperButton onClick={onClickHandler} disabled={isLoading}>Set new password</SuperButton>\n        {isLoading ? <Loader /> : <></>}\n        <div style={{color: \"red\"}}>{error}</div>\n    </>\n}","import React from 'react'\nimport {PATH} from \"../../routes/Routes\";\nimport {NavLink} from \"react-router-dom\";\nimport s from \"./Header.module.css\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {selectAuth} from \"../../redux/Selectors\";\nimport SuperButton from \"../SuperButton/SuperButton\";\nimport {thunkLogOut} from \"../../redux/auth/thunks\";\n\nexport const Header = () => {\n    const dispatch = useDispatch()\n    const {isLoggedIn} = useSelector(selectAuth)\n    const logOut = () => dispatch(thunkLogOut())\n\n\n    return (\n        <header className={s.header}>\n            <NavLink to={PATH.TEST} activeClassName={\"active\"}>Home</NavLink>\n            <NavLink to={PATH.PROFILE} activeClassName={\"active\"}>Profile</NavLink>\n\n            {isLoggedIn ? <SuperButton onClick={logOut} className={s.logoutBtn}>Log Out</SuperButton>\n                : <>\n                    <NavLink to={PATH.LOGIN} activeClassName={\"active\"}>Login</NavLink>\n                    <NavLink to={PATH.REGISTER} activeClassName={\"active\"}>Sign up</NavLink>\n                </>\n            }\n\n        </header>\n    )\n}","import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport {HashRouter} from \"react-router-dom\";\nimport {Routes} from \"./routes/Routes\";\nimport {Header} from \"./components/Header/Header\";\nimport {useDispatch} from \"react-redux\";\nimport {thunkAuthMe} from \"./redux/auth/thunks\";\nimport {Loader} from \"./components/Loader/Loader\";\n\nconst App = () => {\n    const dispatch: (action: any) => Promise<void> = useDispatch()\n    const [loading, setLoading] = useState(true)\n    useEffect(() => {\n        dispatch(thunkAuthMe()).then(() => {setLoading(false)})\n    }, [])\n    return (\n        <HashRouter>\n            <div className=\"App\">\n                <Header/>\n                {loading ? <Loader position=\"center\" /> : <Routes/>}\n            </div>\n        </HashRouter>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {logOutAC, setUser} from \"./actions\";\n\nexport type UserType = {\n    _id: string\n    email: string\n    name: string\n    avatar?: string\n    publicCardPacksCount: number // количество колод\n\n    created: Date\n    updated: Date\n    isAdmin: boolean\n    verified: boolean // подтвердил ли почту\n    rememberMe: boolean\n}\n\nconst initialState = {\n    userData: {} as UserType,\n    isLoggedIn: false,\n}\n\ntype initialStateType = typeof initialState\nexport type AuthActionsType = ReturnType<typeof setUser> | ReturnType<typeof logOutAC>\n\nexport const authReducer = (state: initialStateType = initialState, action: AuthActionsType): initialStateType => {\n    switch (action.type) {\n        case \"Auth/login\":\n            return {...state, userData: action.userData, isLoggedIn: true}\n        case \"Auth/logout\":\n            return {...state, isLoggedIn: false}\n        default:\n            return state\n    }\n}\n","let initialState = {}\n\nexport const profileReducer = (state: any = initialState, action: any): any => {\n    switch(action.type) {\n        default:\n            return state\n    }\n}","import {AppActionsType} from \"./appActions\";\n\nconst appInitialState = {\n    isLoading: false,\n    error: \"\",\n    success: false\n}\n\ntype appInitialStateType = typeof appInitialState\n\nexport const appReducer = (state: appInitialStateType = appInitialState, action: AppActionsType): appInitialStateType => {\n    switch (action.type) {\n        case \"app/SET_LOADING\":\n            return {...state, isLoading: action.isLoading, success: false, error: \"\"}\n        case \"app/SET_ERROR\":\n            return {...state, error: action.error, success: false, isLoading: false}\n        case \"app/SET_SUCCESS\":\n            return {...state, success: action.success, isLoading: false, error: \"\"}\n        default:\n            return state\n    }\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport {authReducer} from \"./auth/reducers\";\nimport {profileReducer} from \"./profile/reducers\";\nimport thunk from \"redux-thunk\";\nimport {appReducer} from \"./main/appReducers\";\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    profile: profileReducer,\n    app: appReducer\n})\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk))\nexport type IGlobalState = ReturnType<typeof rootReducer>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from \"./redux/store\"\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <App />\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}